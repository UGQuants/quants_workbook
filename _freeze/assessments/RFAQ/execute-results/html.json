{
  "hash": "1a9a518929134993f2e847d861ffbe23",
  "result": {
    "engine": "knitr",
    "markdown": "# R Issues FAQ\n\nThis page contains information for solving common issues students have reported when working on their interpretive findings report.\n\nUpdates will continue being added to this page with information for any new issues being reported. So, if you experience an issue, this page will be a good first port of call to check for any existing solution.\n\n\n## Please Read\n\n### How to Report Issues\n\n:::{.callout-note title=\"Reporting R Issues\"}\n\nWhen making a Moodle post or emailing about an issue it is vital to provide sufficient context to enable others to help find a solution. This includes:\n\n-   The full text of any error message that you are receiving.\n-   Any relevant code that is producing the error.\n\nError messages will often flag the relevant code chunk where the error occurred:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/errorlines.png)\n:::\n:::\n\n\n\n\nSo, based on the above error message you would include the code within the code block at lines 49-50.\n\nAdditionally, when emailing, please also include:\n\n-   Your lab group number.\n-   If already made a Moodle post about the issue, a link to the post.\n\n:::\n\n### How to Avoid Most Common Issues\n\n:::{.callout-important title=\"Important\"}\n\nAn underlying cause to many issues reported each year is believing more code needs to be written for the assessments than is actually required.\n\nThe formative and summative assessment template projects we provide already have key things setup for you. Please ensure to follow **all** the instructions to [setup the assessment projects](creating-assessment-projects.qmd) correctly.\n\nA copy of the NILT dataset is already included in the template projects. After following the instructions, your formative/summative assessment projects will also have:\n\n- Every package you will need - *except one* - installed **and** loaded.\n- An `nilt_subset` data frame setup with only the variables used in the regression model.\n- (Summative only) a code chunk with the code to produce the regression results table you need to interpret.\n\nThis means:\n\n- You do not need to add any additional code to download the NILT dataset.\n- You do not need to add any additional code that assigns new data to the `nilt` and `nilt_subset` data frame objects (e.g. do not add any new lines with `nilt <- ...` or `nilt_subset <- ...`).\n- (Summative only) you do not need to add any additional code to create the regression model nor a regression results table.\n\nYou also should not remove any of the existing code chunks in the template as these are essential for initially setting everything up and when knitting your HTML file.\n\nAs the key things are already setup in the template for you, **you only have to write a few lines of code** overall.\n\nFor the formative, at its most basic, after following the setup instructions, all you need in terms of coding is -\n\n- Install the `vtable` package.\n- Load the `vtable` package.\n- Use the `sumtable()` function - which is provided by the `vtable` package - to create a descriptive statistics table for the variables included in the model.\n\nThat's it. It's no more complex than that. At its most basic, **for the formative all you need to write is 3 lines of code**. One in the Console, and two added to your R Markdown file. One can be added to the existing preamble code chunk, the other you'll need to create a new code chunk for.\n\nWith the summative, alongside the above, the only additional thing you need to do in relation to coding is -\n\n- Present data visualisations using `ggplot`, where for each plot you will need to create a code chunk and write 3 - on rare occassions 4 - lines of code.\n\nAs long as you followed the setup instructions, the `tidyverse` package - which includes `ggplot` - will already be installed and loaded. This means you **do not** need to install nor load any other packages for your plots.\n\nOverall then, at its most basic **for the summative assessment all you need to write is the same 3 lines as the formative to create the descriptive statistics table and then an additional 3 lines of code per ggplot you want to create**.\n\nYou may want to write some additional code when initially exploring the data or to calculate / present some additional stats. In rare cases, a plot may need *one* additional line of code to fix an issue, like overlapping text labels. However, **it is perfectly possible to receive an A for the interpretive report with just the code outlined above**.\n\nSo, if you find yourself downloading and wrangling data, running a multitude of functions beyond `sumtable()` and `ggplot` functions, or writing dozens and dozens of lines of code, you are doing more than is actually necessary. You will also likely run into issues if any of this code replaces what is already setup in the assessment template.\n\n:::\n\n### Don't Believe GenAI's Lies\n\n:::{.callout-caution title=\"GenAI Misinformation\"}\n\nAnother common cause of issues each year is genAI leading people astray. GenAI is useful when you have a general understanding of the area / topic you are using it for. However, it is nowhere near as competent as the genAI companies and online grifters make it out to be. If you do not understand the area / topic you are prompting it about, you will not know when its responses contain inaccuracies or outright misinformation.\n\nThis problem is especially true when it comes to R. GenAI when prompted about R will often respond with needlessly complex and over convoluted code. Even where it works, it will regualarly spit out 20+ lines of code for something that could be achieved with 1-4 lines of code. As a rule of thumb then, whenever genAI is advising you to install various packages and/or write dozens of lines of code, it is likely spouting absolute nonsense. Do not believe it's lies - and instead go back through the info on the assessments and the relevant lab workbook weeks for what it is you are trying to do.\n\n**Critically**, not only will uncritical use of genAI often lead you down the wrong path, prompting genAI to write code to copy and paste for your summative assignment will be treated as academic misconduct. You should only be using genAI to get textbook examples and explanations, and nothing that can be copied and pasted into your assignment. Please see the [GenAI and the Assessments](assessments.qmd#genai-and-the-assessments) section for more information on what genAI is permitted for the summative assessments.\n\n:::\n\n## Regression Results Table Issues\n\nIf variables go missing from your regression results table or the regression results are different to how they originally appeared when you knitted the template, you may have unintentionally replaced the data included with the template.\n\nThe preamble code block at the top of the R Markdown file provided with the template reads in the 'fullnilt_2012.rds' dataset and assigns it to the 'nilt' data frame object.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read data\nnilt <- readRDS(\"data/fullnilt_2012.rds\")\n```\n:::\n\n\n\n\nYou therefore do not need to download and read in another dataset, this is all setup for you already within the preamble code block. To resolve the issue, remove all additional code where you downloaded and assign another dataset to the `nilt` data frame. Then re-run the preamble code chunk.\n\nFor example, these would be lines to remove:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/removelines.png)\n:::\n:::\n\n\n\n\nThe 'NILT2012GR' that we used in the labs has a different set of the NILT variables, and does not contain all the variables in the 'fullnilt_2012' dataset provided in the project template. The above code then would result in variables disappearing from your regression results table.\n\nSimilarly, this would also be code to remove:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/removelines2.png)\n:::\n:::\n\n\n\n\nThe above code replaces the original nilt data frame with a version that only includes the 5 variables listed within the selection function. Again, resulting in variables disappearing from the regression results table.\n\nThe `select()` function keeps variables passed to it and drops the others. The first argument is always the dataframe being selected from, `select(dataframe, ...)`, with variables to keep from it listed after, `select(dataframe, variable1, variable2, ...)`. Assigning, `<-`, select() to the same dataframe, `dataframe <- select(dataframe, ..)`, is effectively saying, 'from this dataframe keep these variables and permanently remove the others'. Unless your whole analysis is only going to use that selection, always assign it to a new dataframe instead, `dataframe_subset <- select(dataframe, ...)`.\n\n**Important**: the preamble code chunk in the R Markdown file provided in the project template already has a line of code for creating an `nilt_subset` object with only the variables that are used in the regression model.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Subset with variables used in regression model\nnilt_subset <- nilt |>\n  select(persinc2, rsex, religcat, orient, uninatid, tunionsa, rsuper, rage)\n```\n:::\n\n\n\n\n## Object Not Found\n\n'Object not found' errors often arise when no data has been assigned to a data frame object. For example, if you ran code using `nilt` object, such as `sumtable(nilt, ...)` without first assigning data to it `nilt <- ...`, you would receive the following error message when running/knitting your code:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/objectnotfound.png)\n:::\n:::\n\n\n\n\nThe preamble code chunk in the R Markdown file provided with the project template contains code for reading in the NILT data set and assigning it to an `nilt` data frame object. It also sets up an `nilt_subset` with just the variables used in the regression model.\n\nIf you are receiving object not found errors for these then, ensure you have run the preamble code chunk. If you still receive an error message, double-check for typos and capitalisation, `nilt_subset`, `NILT_subset`, and `ni1t_subset` will be treated as different objects.\n\n## Wrong Word Count\n\nIf the word count displayed at the top of your knitted HTML is wrong, check whether the line of code that calculates the word count refers to the correct R Markdown file you are using.\n\nWithin the template R Markdown document, we include an inline code block that uses a word count addin to calculate your word count within the knitted HTML file:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/wordcountinline.png)\n:::\n:::\n\n\n\n\nWhich when knitted will look as follows in the HTML file:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/summative_knit-count.png)\n:::\n:::\n\n\n\n\nHowever, the code to calculate the word count refers to a specific file \"Summative-template.Rmd\". if you created a new RMarkdown file, such as one that included your student number 'Summative-245425s.Rmd', you also need to update the file name in the code:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/wordcountchange.png)\n:::\n:::\n\n\n\n\nNote, the '- 14' in the code is so \"Word count:\" and each of the headers \"Introduction\", \"Data and method\", etc are also not included in the word count. Ensure to update this number to exclude your bibliography from the word count. For example, if your bibliography is 184 words then change the code to \"wordcountaddin::word_count(\"Summative-template.Rmd\") - 198\".\n\n## Code Chunks Appearing in Knitted File\n\nThe code in the code chunks should not be displayed within your knitted HTML file. The R Markdown file provided in the project template is already setup to not include the code from code chunks by setting the global knitr options to `echo=FALSE`in the setup code chunk. \n\n![setup code chunk that sets global option to not include code from code chunks in knitted outputs](../images/summative_echo-false.png)\\\n\nIf the code from code chunks are appearing in your knitted file, check you have not accidentally removed/modified the setup code chunk. If code from a specific code chunk is showing, but not others, then check you have not accidentally added `echo=TRUE` to its options.\n\n## Unable to Knit\n\n### Execution Halted\n\nThe most common cause of this error is from renaming the R Markdown file, but not updating the line of code that calculates the word count. See [Wrong Word Count] section for general info.\n\nFor example, if you renamed the R Markdwon file from 'Summative-template.Rmd' to 'Summative-245425s.Rmd', you will receive an 'Execution halted' error when trying to knit:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/exechalted.png)\n:::\n:::\n\n\n\n\nTo fix it, just update the line of code that calculates the word count so it refers to the new name you have given the file:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/wordcountchange.png)\n:::\n:::\n\n\n\n\n### Package could not be loaded\n\nIf receiving a \"package '...' could not be loaded\" error message, check the YAML code block at the top of your RMarkdown file. Where this error message has occurred previously, it is due to using the `vtable` package and the YAML code block includes PDF as an output.\n\nYou should have either of the following for `output: ...`:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/outputhtml1.png)\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/outputhtml2.png)\n:::\n:::\n\n\n\n\nBut, will probably have the something like the following if receiving the error message:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/outputhtmlpdf.png)\n:::\n:::\n\n\n\n\nThis can happen unintentionally as RStudio can automatically add a line for PDF outline, such as if accidentally clicked 'Knit to PDF':\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/accidentalpdf.gif)\n:::\n:::\n\n\n\n\nAnnoyingly, even if you click 'Knit to HTML' from the options, if your YAML block includes pdf_document in its outputs, R will still try to create a PDF document and keep running into the error message.\n\nSo, if you are receiving the error message and have the two output lines, you can easily fix it by removing the pdf_document line:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/deletepdfoutput.gif)\n:::\n:::\n\n\n\n\nNote, as the YAML block is already specifying to create an HTML output, you can just click the 'Knit' button directly each time rather than clicking the wee down arrow to select 'Knit to HTML' specifically.\n\n\n## Turnitin Unable to Open HTML File\n\n**Please ensure to submit an exported version of your knitted HTML file rather than one saved through your browser.**\n\nIf Turnitin is providing an error message that it is unable to open your submitted HTML file, it may be due to having saved the file through your browser (e.g. right-clicking and 'Save as...') rather than exporting it from RStudio. Whilst HTML files saved from the browser and exported from RStudio will look absolutely identical when opened, some browsers - and browser extensions - will add additional code within the HTML file. This additional code does not change how the file looks when opened, but the code in the file creates issues for Turnitin.\n\nPlease see the **[Exporting HTML Files for Submission](export.qmd)** page for step-by-step guide for how to export your knitted HTML file.\n\nPlease note: Don't panic if Turnitin is unable to open your file. We are aware of the issue and you will not be penalised if you submit a file on time, but then have to resubmit after the deadline due to Turnitin being unable to open your original submission.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}